# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]


permissions:
  contents: read

jobs:
  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: 저장소 Checkout
  #       uses: actions/checkout@v3

  #       # Git 저장소를 워크스페이스로 체크아웃합니다.

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'adopt'

  #     - name: 스프링부트 애플리케이션 빌드
  #       run: ./gradlew clean build
  #       # 스프링 부트 애플리케이션을 빌드합니다.

  deploy:
    # needs: build
    runs-on: ubuntu-latest

    steps:
      #학교 서버에 로그인해 pull & run : https://github.com/appleboy/ssh-action
      - name: SERVER login and git pull and run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            echo "1. 현재 PID 조회"
            CURRENT_PID=$(pgrep -f homemate-backend)
            echo "현재 PID: $CURRENT_PID"

            echo "2. 기존 프로세스 종료"
            kill -15 $CURRENT_PID
            echo "기존 프로세스를 종료했습니다."

            echo "3. Backend 디렉토리로 이동"
            cd Backend

            echo "4. Git 리포지토리 업데이트"
            git pull origin master

            echo "5. 프로젝트 빌드"
            ./gradlew clean build

            echo "6. build/libs 디렉토리로 이동"
            cd build/libs

            echo "7. 백그라운드에서 애플리케이션 실행"
            nohup java -jar homemate-backend-0.0.1-SNAPSHOT.jar > nohup.out 2> nohup.err < /dev/null &

            echo "애플리케이션을 실행"
