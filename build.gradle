plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'homemate'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// jwt2
	implementation(group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2')
	implementation(group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2')
	implementation(group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2')
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'com.auth0:java-jwt:4.2.1'


	//H2 Database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.0.7'

	// mysql
	implementation 'mysql:mysql-connector-java:8.0.32'

	//MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.1.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	//MariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'

	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//AWS S3
	implementation("org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE")

	// WebSocket
	//implementation 'org.springframework.boot:spring-boot-starter-websocket'




}

tasks.named('test') {
	useJUnitPlatform()
}

// REACT 같이 빌드하기
def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}

